(()=>{let TimeAutoInitializer={elements:[],updateInterval:null,updateFrequency:3e4,observerActive:!1,startObserving:function(){this.observerActive||(console.log("Time: Starting DOM observer"),new MutationObserver(mutations=>{let shouldRefresh=!1;mutations.forEach(mutation=>{"childList"===mutation.type&&(mutation.addedNodes.forEach(node=>{1===node.nodeType&&node.querySelector&&node.querySelector("[data-dt-time]")&&(shouldRefresh=!0)}),mutation.removedNodes.forEach(node=>{1===node.nodeType&&node.querySelector&&node.querySelector("[data-dt-time]")&&(shouldRefresh=!0)}))}),shouldRefresh&&this.initialize()}).observe(document.body,{childList:!0,subtree:!0}),this.observerActive=!0)},initialize:function(){console.log("Time: Initializing time elements"),this.cleanup();var timeElements=document.querySelectorAll("[data-dt-time]");timeElements.length?(console.log(`Time: Found ${timeElements.length} time elements`),this.elements=Array.from(timeElements),this.updateAllTimes(),this.setupUpdateInterval()):console.log("Time: No time elements found")},cleanup:function(){this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),this.elements=[]},setupUpdateInterval:function(){this.updateInterval&&clearInterval(this.updateInterval),this.updateInterval=setInterval(()=>{this.updateAllTimes()},this.updateFrequency)},updateAllTimes:function(){let now=new Date;if(!this.elements||!this.elements.length){var timeElements=document.querySelectorAll("[data-dt-time]");if(!timeElements.length)return;this.elements=Array.from(timeElements)}this.elements.forEach(element=>{try{var timezone,format,formattedTime;document.body.contains(element)&&(timezone=element.getAttribute("data-dt-time"),format=element.getAttribute("data-dt-time-format")||"HH:mm",timezone)&&(formattedTime=this.formatTimeInTimezone(now,timezone,format),element.textContent=formattedTime)}catch(error){console.log("Time: Error updating element",error)}})},formatTimeInTimezone:function(date,timezone,format){try{var options=this.createFormattingOptions(format),formattedParts=new Intl.DateTimeFormat("en-US",{...options,timeZone:timezone}).formatToParts(date);return this.partsToFormat(formattedParts,format)}catch(error){return date.toLocaleTimeString("en-US",{timeZone:timezone})}},createFormattingOptions:function(format){var options={hour12:format.includes("a")||format.includes("A")};return format.includes("HH")||format.includes("H")?options.hour="2-digit":(format.includes("h")||format.includes("k"))&&(options.hour="numeric"),(format.includes("mm")||format.includes("m"))&&(options.minute="2-digit"),(format.includes("ss")||format.includes("s"))&&(options.second="2-digit"),(format.includes("a")||format.includes("A"))&&(options.dayPeriod="short"),(format.includes("YYYY")||format.includes("yyyy")||format.includes("Y"))&&(options.year="numeric"),format.includes("MM")||format.includes("M")?options.month="2-digit":format.includes("MMM")?options.month="short":format.includes("MMMM")&&(options.month="long"),(format.includes("DD")||format.includes("dd")||format.includes("D"))&&(options.day="2-digit"),(format.includes("z")||format.includes("Z"))&&(options.timeZoneName="short"),options},partsToFormat:function(parts,format){let result=format,partMap={},hour=(parts.forEach(part=>{partMap[part.type]=part.value}),result=(result=(result=(result=(result=(result=(result=(result=result.replace(/YYYY|yyyy/g,partMap.year||"")).replace(/YY|yy/g,partMap.year?partMap.year.slice(-2):"")).replace(/MMMM/g,partMap.month||"")).replace(/MMM/g,partMap.month?partMap.month.substring(0,3):"")).replace(/MM/g,partMap.month||"")).replace(/M/g,partMap.month?partMap.month.replace(/^0/,""):"")).replace(/DD/g,partMap.day||"")).replace(/D/g,partMap.day?partMap.day.replace(/^0/,""):""),partMap.hour||"");return format.includes("HH")?(partMap.dayPeriod&&(hour=parseInt(hour),"pm"===partMap.dayPeriod.toLowerCase()&&hour<12?hour+=12:"am"===partMap.dayPeriod.toLowerCase()&&12===hour&&(hour=0),hour=hour.toString().padStart(2,"0")),result=result.replace(/HH/g,hour)):format.includes("H")?(partMap.dayPeriod&&(hour=parseInt(hour),"pm"===partMap.dayPeriod.toLowerCase()&&hour<12?hour+=12:"am"===partMap.dayPeriod.toLowerCase()&&12===hour&&(hour=0),hour=hour.toString()),result=result.replace(/H/g,hour)):format.includes("hh")?result=result.replace(/hh/g,hour):format.includes("h")&&(result=result.replace(/h/g,hour?hour.replace(/^0/,""):"")),result=(result=(result=(result=(result=(result=(result=result.replace(/mm/g,partMap.minute||"00")).replace(/m/g,partMap.minute?partMap.minute.replace(/^0/,""):"0")).replace(/ss/g,partMap.second||"00")).replace(/s/g,partMap.second?partMap.second.replace(/^0/,""):"0")).replace(/A/g,partMap.dayPeriod?partMap.dayPeriod.toUpperCase():"")).replace(/a/g,partMap.dayPeriod?partMap.dayPeriod.toLowerCase():"")).replace(/z/g,partMap.timeZoneName||"")},refreshAllTimes:function(){this.updateAllTimes()},setUpdateFrequency:function(milliseconds){this.updateFrequency=milliseconds,this.setupUpdateInterval()}};document.addEventListener("swup:contentReplaced",()=>{console.log("Time: Swup content replaced event detected"),setTimeout(()=>{TimeAutoInitializer.initialize()},100)}),document.addEventListener("DOMContentLoaded",()=>{console.log("Time: DOMContentLoaded event detected"),TimeAutoInitializer.initialize(),TimeAutoInitializer.startObserving()}),"complete"!==document.readyState&&"interactive"!==document.readyState||(console.log("Time: Document already loaded, initializing directly"),setTimeout(()=>{TimeAutoInitializer.initialize(),TimeAutoInitializer.startObserving()},100)),window.TimeAutoInitializer=TimeAutoInitializer})(),window.App=window.App||{},window.App.Time={elements:[],updateInterval:null,updateFrequency:3e4,initialize:function(){window.TimeAutoInitializer&&window.TimeAutoInitializer.initialize()},refreshAllTimes:function(){window.TimeAutoInitializer&&window.TimeAutoInitializer.refreshAllTimes()},setUpdateFrequency:function(milliseconds){window.TimeAutoInitializer&&window.TimeAutoInitializer.setUpdateFrequency(milliseconds)}};